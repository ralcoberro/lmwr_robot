<?xml version="1.0"?>
<robot name="lmwr_diff_xacro" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:property name="body_lenght" value="0.7" />
  <xacro:property name="body_width" value="0.4" />
  <xacro:property name="body_height" value="0.25" />
  <xacro:property name="traction_wheel_radius" value="0.11" />
  <xacro:property name="traction_wheel_width" value="0.05" />
  <xacro:property name="aux_wheel_radius" value="0.05" />
  <xacro:property name="aux_wheel_width" value="0.03" />
  <xacro:property name="support_lenght" value="0.6" />
  <xacro:property name="baselen" value="0.4" />
  <xacro:property name="wheeldiam" value="0.07" />

  <!--xacro:property name="pi" value="3.1415" /-->

  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>

  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>

  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>

  <xacro:macro name="default_inertial" params="mass">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
  </xacro:macro>

  <link name="main_body">
    <visual>
      <geometry>
        <box size="${body_lenght} ${body_width} ${body_height}"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <box size="${body_lenght} ${body_width} ${body_height}"/>
      </geometry>
    </collision>
    <xacro:default_inertial mass="13"/>
  </link>

  <xacro:macro name="aux_wheel" params="side reflect">

    <link name="${side}_aux_wheel">
      <visual>
        <origin xyz="0 ${reflect*aux_wheel_width/2} 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${aux_wheel_radius}" length="${aux_wheel_width}"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0 ${reflect*aux_wheel_width/2} 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${aux_wheel_radius}" length="${aux_wheel_width}"/>
        </geometry>
      </collision>
      <xacro:default_inertial mass="1"/>
    </link>
    <joint name="${side}_aux_wheel_joint" type="continuous">
      <axis xyz="0 1 0" rpy="0 0 0" />
      <parent link="${side}_front_support"/>
      <child link="${side}_aux_wheel"/>
      <origin xyz="0 ${reflect*0.01} -0.06" rpy="0 0 0"/>
    </joint>

    <!-- This block provides the simulator (Gazebo) with information on a few additional
    physical properties. See http://gazebosim.org/tutorials/?tut=ros_urdf for more-->
    <gazebo reference="${side}_aux_wheel">
      <mu1 value="200.0"/>
      <mu2 value="100.0"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Grey</material>
    </gazebo>

  </xacro:macro>

  <xacro:macro name="support" params="side reflect">
    <link name="${side}_front_support">
      <visual>
        <geometry>
          <box size="0.05 0.01 0.08"/>
        </geometry>
        <origin xyz="0 0 -0.04"/>
        <material name="white"/>
      </visual>
      <collision>
        <geometry>
          <box size="0.05 0.01 0.08"/>
        </geometry>
        <origin xyz="0 0 -0.04"/>
      </collision>
      <xacro:default_inertial mass="0.2"/>
    </link>

    <joint name="${side}_front_base_joint" type="continuous">
      <axis rpy="0 0 0" xyz="0 0 1"/>
      <parent link="main_body"/>
      <child link="${side}_front_support"/>
      <origin xyz="0.3 ${reflect*0.15} -0.125" />
    </joint>
    <xacro:aux_wheel side="${side}"  reflect="${reflect}"/>

  </xacro:macro>

  <xacro:macro name="traction_wheel" params="side reflect">

    <link name="${side}_traction_wheel">
      <visual>
        <origin xyz="0 ${reflect*traction_wheel_width/2} 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${traction_wheel_radius}" length="${traction_wheel_width}"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0 ${reflect*traction_wheel_width/2} 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${traction_wheel_radius}" length="${traction_wheel_width}"/>
        </geometry>
      </collision>
      <xacro:default_inertial mass="1"/>
    </link>
    <joint name="${side}_traction_wheel_joint" type="continuous">
      <axis xyz="0 1 0" rpy="0 0 0" />
      <parent link="main_body"/>
      <child link="${side}_traction_wheel"/>
      <origin xyz="-${body_lenght/3} ${reflect*(body_width/2+0.01)} ${-body_height/2}" rpy="0 0 0"/>
    </joint>

    <!-- This block provides the simulator (Gazebo) with information on a few additional
    physical properties. See http://gazebosim.org/tutorials/?tut=ros_urdf for more-->
    <gazebo reference="${side}_traction_wheel">
      <mu1 value="200.0"/>
      <mu2 value="100.0"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Grey</material>
    </gazebo>

    <!-- This block connects the wheel joint to an actuator (motor), which informs both
    simulation and visualization of the robot -->
    <transmission name="${side}_traction_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${side}_traction_wheel_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${side}_traction_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>

  </xacro:macro>

  <xacro:traction_wheel side="left" reflect="-1"/>
  <xacro:traction_wheel side="right" reflect="1"/>

  <xacro:support side="left" reflect="-1" />
  <xacro:support side="right" reflect="1" />

  <!-- Gazebo plugin for ROS Control -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
    </plugin>
  </gazebo>

</robot>
